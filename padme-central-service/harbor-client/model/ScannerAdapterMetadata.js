/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Scanner', 'model/ScannerCapability'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Scanner'), require('./ScannerCapability'));
  } else {
    // Browser globals (root is window)
    if (!root.HarborApi) {
      root.HarborApi = {};
    }
    root.HarborApi.ScannerAdapterMetadata = factory(root.HarborApi.ApiClient, root.HarborApi.Scanner, root.HarborApi.ScannerCapability);
  }
}(this, function(ApiClient, Scanner, ScannerCapability) {
  'use strict';

  /**
   * The ScannerAdapterMetadata model module.
   * @module model/ScannerAdapterMetadata
   * @version 2.0
   */

  /**
   * Constructs a new <code>ScannerAdapterMetadata</code>.
   * The metadata info of the scanner adapter
   * @alias module:model/ScannerAdapterMetadata
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>ScannerAdapterMetadata</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ScannerAdapterMetadata} obj Optional instance to populate.
   * @return {module:model/ScannerAdapterMetadata} The populated <code>ScannerAdapterMetadata</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('name'))
        obj.name = Scanner.constructFromObject(data['name']);
      if (data.hasOwnProperty('capabilities'))
        obj.capabilities = ApiClient.convertToType(data['capabilities'], [ScannerCapability]);
      if (data.hasOwnProperty('properties'))
        obj.properties = ApiClient.convertToType(data['properties'], {'String': 'String'});
    }
    return obj;
  }

  /**
   * @member {module:model/Scanner} name
   */
  exports.prototype.name = undefined;

  /**
   * @member {Array.<module:model/ScannerCapability>} capabilities
   */
  exports.prototype.capabilities = undefined;

  /**
   * @member {Object.<String, String>} properties
   */
  exports.prototype.properties = undefined;


  return exports;

}));
