/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.HarborApi) {
      root.HarborApi = {};
    }
    root.HarborApi.Label = factory(root.HarborApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Label model module.
   * @module model/Label
   * @version 2.0
   */

  /**
   * Constructs a new <code>Label</code>.
   * @alias module:model/Label
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Label</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Label} obj Optional instance to populate.
   * @return {module:model/Label} The populated <code>Label</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('color'))
        obj.color = ApiClient.convertToType(data['color'], 'String');
      if (data.hasOwnProperty('scope'))
        obj.scope = ApiClient.convertToType(data['scope'], 'String');
      if (data.hasOwnProperty('project_id'))
        obj.projectId = ApiClient.convertToType(data['project_id'], 'Number');
      if (data.hasOwnProperty('creation_time'))
        obj.creationTime = ApiClient.convertToType(data['creation_time'], 'Date');
      if (data.hasOwnProperty('update_time'))
        obj.updateTime = ApiClient.convertToType(data['update_time'], 'Date');
      if (data.hasOwnProperty('deleted'))
        obj.deleted = ApiClient.convertToType(data['deleted'], 'Boolean');
    }
    return obj;
  }

  /**
   * The ID of the label
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * The name the label
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * The description the label
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * The color the label
   * @member {String} color
   */
  exports.prototype.color = undefined;

  /**
   * The scope the label
   * @member {String} scope
   */
  exports.prototype.scope = undefined;

  /**
   * The ID of project that the label belongs to
   * @member {Number} projectId
   */
  exports.prototype.projectId = undefined;

  /**
   * The creation time the label
   * @member {Date} creationTime
   */
  exports.prototype.creationTime = undefined;

  /**
   * The update time of the label
   * @member {Date} updateTime
   */
  exports.prototype.updateTime = undefined;

  /**
   * The label is deleted or not.
   * @member {Boolean} deleted
   */
  exports.prototype.deleted = undefined;


  return exports;

}));
