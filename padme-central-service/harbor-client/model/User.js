/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.HarborApi) {
      root.HarborApi = {};
    }
    root.HarborApi.User = factory(root.HarborApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The User model module.
   * @module model/User
   * @version 2.0
   */

  /**
   * Constructs a new <code>User</code>.
   * @alias module:model/User
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/User} obj Optional instance to populate.
   * @return {module:model/User} The populated <code>User</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('user_id'))
        obj.userId = ApiClient.convertToType(data['user_id'], 'Number');
      if (data.hasOwnProperty('username'))
        obj.username = ApiClient.convertToType(data['username'], 'String');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('password'))
        obj.password = ApiClient.convertToType(data['password'], 'String');
      if (data.hasOwnProperty('realname'))
        obj.realname = ApiClient.convertToType(data['realname'], 'String');
      if (data.hasOwnProperty('comment'))
        obj.comment = ApiClient.convertToType(data['comment'], 'String');
      if (data.hasOwnProperty('deleted'))
        obj.deleted = ApiClient.convertToType(data['deleted'], 'Boolean');
      if (data.hasOwnProperty('role_name'))
        obj.roleName = ApiClient.convertToType(data['role_name'], 'String');
      if (data.hasOwnProperty('role_id'))
        obj.roleId = ApiClient.convertToType(data['role_id'], 'Number');
      if (data.hasOwnProperty('sysadmin_flag'))
        obj.sysadminFlag = ApiClient.convertToType(data['sysadmin_flag'], 'Boolean');
      if (data.hasOwnProperty('admin_role_in_auth'))
        obj.adminRoleInAuth = ApiClient.convertToType(data['admin_role_in_auth'], 'Boolean');
      if (data.hasOwnProperty('reset_uuid'))
        obj.resetUuid = ApiClient.convertToType(data['reset_uuid'], 'String');
      if (data.hasOwnProperty('Salt'))
        obj.salt = ApiClient.convertToType(data['Salt'], 'String');
      if (data.hasOwnProperty('creation_time'))
        obj.creationTime = ApiClient.convertToType(data['creation_time'], 'String');
      if (data.hasOwnProperty('update_time'))
        obj.updateTime = ApiClient.convertToType(data['update_time'], 'String');
    }
    return obj;
  }

  /**
   * The ID of the user.
   * @member {Number} userId
   */
  exports.prototype.userId = undefined;

  /**
   * @member {String} username
   */
  exports.prototype.username = undefined;

  /**
   * @member {String} email
   */
  exports.prototype.email = undefined;

  /**
   * @member {String} password
   */
  exports.prototype.password = undefined;

  /**
   * @member {String} realname
   */
  exports.prototype.realname = undefined;

  /**
   * @member {String} comment
   */
  exports.prototype.comment = undefined;

  /**
   * @member {Boolean} deleted
   */
  exports.prototype.deleted = undefined;

  /**
   * @member {String} roleName
   */
  exports.prototype.roleName = undefined;

  /**
   * @member {Number} roleId
   */
  exports.prototype.roleId = undefined;

  /**
   * @member {Boolean} sysadminFlag
   */
  exports.prototype.sysadminFlag = undefined;

  /**
   * indicate the admin privilege is grant by authenticator (LDAP), is always false unless it is the current login user
   * @member {Boolean} adminRoleInAuth
   */
  exports.prototype.adminRoleInAuth = undefined;

  /**
   * @member {String} resetUuid
   */
  exports.prototype.resetUuid = undefined;

  /**
   * @member {String} salt
   */
  exports.prototype.salt = undefined;

  /**
   * @member {String} creationTime
   */
  exports.prototype.creationTime = undefined;

  /**
   * @member {String} updateTime
   */
  exports.prototype.updateTime = undefined;


  return exports;

}));
