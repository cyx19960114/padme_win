/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ExtraAttrs', 'model/Metrics'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ExtraAttrs'), require('./Metrics'));
  } else {
    // Browser globals (root is window)
    if (!root.HarborApi) {
      root.HarborApi = {};
    }
    root.HarborApi.Execution = factory(root.HarborApi.ApiClient, root.HarborApi.ExtraAttrs, root.HarborApi.Metrics);
  }
}(this, function(ApiClient, ExtraAttrs, Metrics) {
  'use strict';

  /**
   * The Execution model module.
   * @module model/Execution
   * @version 2.0
   */

  /**
   * Constructs a new <code>Execution</code>.
   * @alias module:model/Execution
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Execution</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Execution} obj Optional instance to populate.
   * @return {module:model/Execution} The populated <code>Execution</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('vendor_type'))
        obj.vendorType = ApiClient.convertToType(data['vendor_type'], 'String');
      if (data.hasOwnProperty('vendor_id'))
        obj.vendorId = ApiClient.convertToType(data['vendor_id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('status_message'))
        obj.statusMessage = ApiClient.convertToType(data['status_message'], 'String');
      if (data.hasOwnProperty('metrics'))
        obj.metrics = Metrics.constructFromObject(data['metrics']);
      if (data.hasOwnProperty('trigger'))
        obj.trigger = ApiClient.convertToType(data['trigger'], 'String');
      if (data.hasOwnProperty('extra_attrs'))
        obj.extraAttrs = ExtraAttrs.constructFromObject(data['extra_attrs']);
      if (data.hasOwnProperty('start_time'))
        obj.startTime = ApiClient.convertToType(data['start_time'], 'String');
      if (data.hasOwnProperty('end_time'))
        obj.endTime = ApiClient.convertToType(data['end_time'], 'String');
    }
    return obj;
  }

  /**
   * The ID of execution
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * The vendor type of execution
   * @member {String} vendorType
   */
  exports.prototype.vendorType = undefined;

  /**
   * The vendor id of execution
   * @member {Number} vendorId
   */
  exports.prototype.vendorId = undefined;

  /**
   * The status of execution
   * @member {String} status
   */
  exports.prototype.status = undefined;

  /**
   * The status message of execution
   * @member {String} statusMessage
   */
  exports.prototype.statusMessage = undefined;

  /**
   * @member {module:model/Metrics} metrics
   */
  exports.prototype.metrics = undefined;

  /**
   * The trigger of execution
   * @member {String} trigger
   */
  exports.prototype.trigger = undefined;

  /**
   * @member {module:model/ExtraAttrs} extraAttrs
   */
  exports.prototype.extraAttrs = undefined;

  /**
   * The start time of execution
   * @member {String} startTime
   */
  exports.prototype.startTime = undefined;

  /**
   * The end time of execution
   * @member {String} endTime
   */
  exports.prototype.endTime = undefined;


  return exports;

}));
