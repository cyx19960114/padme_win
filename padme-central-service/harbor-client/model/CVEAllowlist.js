/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CVEAllowlistItem'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CVEAllowlistItem'));
  } else {
    // Browser globals (root is window)
    if (!root.HarborApi) {
      root.HarborApi = {};
    }
    root.HarborApi.CVEAllowlist = factory(root.HarborApi.ApiClient, root.HarborApi.CVEAllowlistItem);
  }
}(this, function(ApiClient, CVEAllowlistItem) {
  'use strict';

  /**
   * The CVEAllowlist model module.
   * @module model/CVEAllowlist
   * @version 2.0
   */

  /**
   * Constructs a new <code>CVEAllowlist</code>.
   * The CVE Allowlist for system or project
   * @alias module:model/CVEAllowlist
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>CVEAllowlist</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CVEAllowlist} obj Optional instance to populate.
   * @return {module:model/CVEAllowlist} The populated <code>CVEAllowlist</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('project_id'))
        obj.projectId = ApiClient.convertToType(data['project_id'], 'Number');
      if (data.hasOwnProperty('expires_at'))
        obj.expiresAt = ApiClient.convertToType(data['expires_at'], 'Number');
      if (data.hasOwnProperty('items'))
        obj.items = ApiClient.convertToType(data['items'], [CVEAllowlistItem]);
      if (data.hasOwnProperty('creation_time'))
        obj.creationTime = ApiClient.convertToType(data['creation_time'], 'Date');
      if (data.hasOwnProperty('update_time'))
        obj.updateTime = ApiClient.convertToType(data['update_time'], 'Date');
    }
    return obj;
  }

  /**
   * ID of the allowlist
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * ID of the project which the allowlist belongs to.  For system level allowlist this attribute is zero.
   * @member {Number} projectId
   */
  exports.prototype.projectId = undefined;

  /**
   * the time for expiration of the allowlist, in the form of seconds since epoch.  This is an optional attribute, if it's not set the CVE allowlist does not expire.
   * @member {Number} expiresAt
   */
  exports.prototype.expiresAt = undefined;

  /**
   * @member {Array.<module:model/CVEAllowlistItem>} items
   */
  exports.prototype.items = undefined;

  /**
   * The creation time of the allowlist.
   * @member {Date} creationTime
   */
  exports.prototype.creationTime = undefined;

  /**
   * The update time of the allowlist.
   * @member {Date} updateTime
   */
  exports.prototype.updateTime = undefined;


  return exports;

}));
