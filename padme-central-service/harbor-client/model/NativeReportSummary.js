/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Scanner', 'model/VulnerabilitySummary'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Scanner'), require('./VulnerabilitySummary'));
  } else {
    // Browser globals (root is window)
    if (!root.HarborApi) {
      root.HarborApi = {};
    }
    root.HarborApi.NativeReportSummary = factory(root.HarborApi.ApiClient, root.HarborApi.Scanner, root.HarborApi.VulnerabilitySummary);
  }
}(this, function(ApiClient, Scanner, VulnerabilitySummary) {
  'use strict';

  /**
   * The NativeReportSummary model module.
   * @module model/NativeReportSummary
   * @version 2.0
   */

  /**
   * Constructs a new <code>NativeReportSummary</code>.
   * The summary for the native report
   * @alias module:model/NativeReportSummary
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>NativeReportSummary</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/NativeReportSummary} obj Optional instance to populate.
   * @return {module:model/NativeReportSummary} The populated <code>NativeReportSummary</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('report_id'))
        obj.reportId = ApiClient.convertToType(data['report_id'], 'String');
      if (data.hasOwnProperty('scan_status'))
        obj.scanStatus = ApiClient.convertToType(data['scan_status'], 'String');
      if (data.hasOwnProperty('severity'))
        obj.severity = ApiClient.convertToType(data['severity'], 'String');
      if (data.hasOwnProperty('duration'))
        obj.duration = ApiClient.convertToType(data['duration'], 'Number');
      if (data.hasOwnProperty('summary'))
        obj.summary = VulnerabilitySummary.constructFromObject(data['summary']);
      if (data.hasOwnProperty('start_time'))
        obj.startTime = ApiClient.convertToType(data['start_time'], 'Date');
      if (data.hasOwnProperty('end_time'))
        obj.endTime = ApiClient.convertToType(data['end_time'], 'Date');
      if (data.hasOwnProperty('complete_percent'))
        obj.completePercent = ApiClient.convertToType(data['complete_percent'], 'Number');
      if (data.hasOwnProperty('scanner'))
        obj.scanner = Scanner.constructFromObject(data['scanner']);
    }
    return obj;
  }

  /**
   * id of the native scan report
   * @member {String} reportId
   */
  exports.prototype.reportId = undefined;

  /**
   * The status of the report generating process
   * @member {String} scanStatus
   */
  exports.prototype.scanStatus = undefined;

  /**
   * The overall severity
   * @member {String} severity
   */
  exports.prototype.severity = undefined;

  /**
   * The seconds spent for generating the report
   * @member {Number} duration
   */
  exports.prototype.duration = undefined;

  /**
   * @member {module:model/VulnerabilitySummary} summary
   */
  exports.prototype.summary = undefined;

  /**
   * The start time of the scan process that generating report
   * @member {Date} startTime
   */
  exports.prototype.startTime = undefined;

  /**
   * The end time of the scan process that generating report
   * @member {Date} endTime
   */
  exports.prototype.endTime = undefined;

  /**
   * The complete percent of the scanning which value is between 0 and 100
   * @member {Number} completePercent
   */
  exports.prototype.completePercent = undefined;

  /**
   * @member {module:model/Scanner} scanner
   */
  exports.prototype.scanner = undefined;


  return exports;

}));
