/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ScheduleObj'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ScheduleObj'));
  } else {
    // Browser globals (root is window)
    if (!root.HarborApi) {
      root.HarborApi = {};
    }
    root.HarborApi.GCHistory = factory(root.HarborApi.ApiClient, root.HarborApi.ScheduleObj);
  }
}(this, function(ApiClient, ScheduleObj) {
  'use strict';

  /**
   * The GCHistory model module.
   * @module model/GCHistory
   * @version 2.0
   */

  /**
   * Constructs a new <code>GCHistory</code>.
   * @alias module:model/GCHistory
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>GCHistory</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GCHistory} obj Optional instance to populate.
   * @return {module:model/GCHistory} The populated <code>GCHistory</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('job_name'))
        obj.jobName = ApiClient.convertToType(data['job_name'], 'String');
      if (data.hasOwnProperty('job_kind'))
        obj.jobKind = ApiClient.convertToType(data['job_kind'], 'String');
      if (data.hasOwnProperty('job_parameters'))
        obj.jobParameters = ApiClient.convertToType(data['job_parameters'], 'String');
      if (data.hasOwnProperty('schedule'))
        obj.schedule = ScheduleObj.constructFromObject(data['schedule']);
      if (data.hasOwnProperty('job_status'))
        obj.jobStatus = ApiClient.convertToType(data['job_status'], 'String');
      if (data.hasOwnProperty('deleted'))
        obj.deleted = ApiClient.convertToType(data['deleted'], 'Boolean');
      if (data.hasOwnProperty('creation_time'))
        obj.creationTime = ApiClient.convertToType(data['creation_time'], 'Date');
      if (data.hasOwnProperty('update_time'))
        obj.updateTime = ApiClient.convertToType(data['update_time'], 'Date');
    }
    return obj;
  }

  /**
   * the id of gc job.
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * the job name of gc job.
   * @member {String} jobName
   */
  exports.prototype.jobName = undefined;

  /**
   * the job kind of gc job.
   * @member {String} jobKind
   */
  exports.prototype.jobKind = undefined;

  /**
   * the job parameters of gc job.
   * @member {String} jobParameters
   */
  exports.prototype.jobParameters = undefined;

  /**
   * @member {module:model/ScheduleObj} schedule
   */
  exports.prototype.schedule = undefined;

  /**
   * the status of gc job.
   * @member {String} jobStatus
   */
  exports.prototype.jobStatus = undefined;

  /**
   * if gc job was deleted.
   * @member {Boolean} deleted
   */
  exports.prototype.deleted = undefined;

  /**
   * the creation time of gc job.
   * @member {Date} creationTime
   */
  exports.prototype.creationTime = undefined;

  /**
   * the update time of gc job.
   * @member {Date} updateTime
   */
  exports.prototype.updateTime = undefined;


  return exports;

}));
