/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.HarborApi) {
      root.HarborApi = {};
    }
    root.HarborApi.Stats = factory(root.HarborApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Stats model module.
   * @module model/Stats
   * @version 2.0
   */

  /**
   * Constructs a new <code>Stats</code>.
   * Stats provides the overall progress of the scan all process.
   * @alias module:model/Stats
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Stats</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Stats} obj Optional instance to populate.
   * @return {module:model/Stats} The populated <code>Stats</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('total'))
        obj.total = ApiClient.convertToType(data['total'], 'Number');
      if (data.hasOwnProperty('completed'))
        obj.completed = ApiClient.convertToType(data['completed'], 'Number');
      if (data.hasOwnProperty('metrics'))
        obj.metrics = ApiClient.convertToType(data['metrics'], {'String': 'Number'});
      if (data.hasOwnProperty('ongoing'))
        obj.ongoing = ApiClient.convertToType(data['ongoing'], 'Boolean');
      if (data.hasOwnProperty('trigger'))
        obj.trigger = ApiClient.convertToType(data['trigger'], 'String');
    }
    return obj;
  }

  /**
   * The total number of scan processes triggered by the scan all action
   * @member {Number} total
   */
  exports.prototype.total = undefined;

  /**
   * The number of the finished scan processes triggered by the scan all action
   * @member {Number} completed
   */
  exports.prototype.completed = undefined;

  /**
   * The metrics data for the each status
   * @member {Object.<String, Number>} metrics
   */
  exports.prototype.metrics = undefined;

  /**
   * A flag indicating job status of scan all.
   * @member {Boolean} ongoing
   */
  exports.prototype.ongoing = undefined;

  /**
   * The trigger of the scan all job.
   * @member {module:model/Stats.TriggerEnum} trigger
   */
  exports.prototype.trigger = undefined;



  /**
   * Allowed values for the <code>trigger</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TriggerEnum = {
    /**
     * value: "Manual"
     * @const
     */
    manual: "Manual",

    /**
     * value: "Schedule"
     * @const
     */
    schedule: "Schedule",

    /**
     * value: "Event"
     * @const
     */
    event: "Event"
  };

  return exports;

}));
