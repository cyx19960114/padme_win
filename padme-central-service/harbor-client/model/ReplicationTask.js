/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.HarborApi) {
      root.HarborApi = {};
    }
    root.HarborApi.ReplicationTask = factory(root.HarborApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The ReplicationTask model module.
   * @module model/ReplicationTask
   * @version 2.0
   */

  /**
   * Constructs a new <code>ReplicationTask</code>.
   * The replication task
   * @alias module:model/ReplicationTask
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>ReplicationTask</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ReplicationTask} obj Optional instance to populate.
   * @return {module:model/ReplicationTask} The populated <code>ReplicationTask</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('execution_id'))
        obj.executionId = ApiClient.convertToType(data['execution_id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('job_id'))
        obj.jobId = ApiClient.convertToType(data['job_id'], 'String');
      if (data.hasOwnProperty('operation'))
        obj.operation = ApiClient.convertToType(data['operation'], 'String');
      if (data.hasOwnProperty('resource_type'))
        obj.resourceType = ApiClient.convertToType(data['resource_type'], 'String');
      if (data.hasOwnProperty('src_resource'))
        obj.srcResource = ApiClient.convertToType(data['src_resource'], 'String');
      if (data.hasOwnProperty('dst_resource'))
        obj.dstResource = ApiClient.convertToType(data['dst_resource'], 'String');
      if (data.hasOwnProperty('start_time'))
        obj.startTime = ApiClient.convertToType(data['start_time'], 'Date');
      if (data.hasOwnProperty('end_time'))
        obj.endTime = ApiClient.convertToType(data['end_time'], 'Date');
    }
    return obj;
  }

  /**
   * The ID of the task
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * The ID of the execution that the task belongs to
   * @member {Number} executionId
   */
  exports.prototype.executionId = undefined;

  /**
   * The status of the task
   * @member {String} status
   */
  exports.prototype.status = undefined;

  /**
   * The ID of the underlying job that the task related to
   * @member {String} jobId
   */
  exports.prototype.jobId = undefined;

  /**
   * The operation of the task
   * @member {String} operation
   */
  exports.prototype.operation = undefined;

  /**
   * The type of the resource that the task operates
   * @member {String} resourceType
   */
  exports.prototype.resourceType = undefined;

  /**
   * The source resource that the task operates
   * @member {String} srcResource
   */
  exports.prototype.srcResource = undefined;

  /**
   * The destination resource that the task operates
   * @member {String} dstResource
   */
  exports.prototype.dstResource = undefined;

  /**
   * The start time of the task
   * @member {Date} startTime
   */
  exports.prototype.startTime = undefined;

  /**
   * The end time of the task
   * @member {Date} endTime
   */
  exports.prototype.endTime = undefined;


  return exports;

}));
