/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/QuotaRefObject', 'model/ResourceList'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./QuotaRefObject'), require('./ResourceList'));
  } else {
    // Browser globals (root is window)
    if (!root.HarborApi) {
      root.HarborApi = {};
    }
    root.HarborApi.Quota = factory(root.HarborApi.ApiClient, root.HarborApi.QuotaRefObject, root.HarborApi.ResourceList);
  }
}(this, function(ApiClient, QuotaRefObject, ResourceList) {
  'use strict';

  /**
   * The Quota model module.
   * @module model/Quota
   * @version 2.0
   */

  /**
   * Constructs a new <code>Quota</code>.
   * The quota object
   * @alias module:model/Quota
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Quota</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Quota} obj Optional instance to populate.
   * @return {module:model/Quota} The populated <code>Quota</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('ref'))
        obj.ref = QuotaRefObject.constructFromObject(data['ref']);
      if (data.hasOwnProperty('hard'))
        obj.hard = ResourceList.constructFromObject(data['hard']);
      if (data.hasOwnProperty('used'))
        obj.used = ResourceList.constructFromObject(data['used']);
      if (data.hasOwnProperty('creation_time'))
        obj.creationTime = ApiClient.convertToType(data['creation_time'], 'String');
      if (data.hasOwnProperty('update_time'))
        obj.updateTime = ApiClient.convertToType(data['update_time'], 'String');
    }
    return obj;
  }

  /**
   * ID of the quota
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * The reference object of the quota
   * @member {module:model/QuotaRefObject} ref
   */
  exports.prototype.ref = undefined;

  /**
   * The hard limits of the quota
   * @member {module:model/ResourceList} hard
   */
  exports.prototype.hard = undefined;

  /**
   * The used status of the quota
   * @member {module:model/ResourceList} used
   */
  exports.prototype.used = undefined;

  /**
   * the creation time of the quota
   * @member {String} creationTime
   */
  exports.prototype.creationTime = undefined;

  /**
   * the update time of the quota
   * @member {String} updateTime
   */
  exports.prototype.updateTime = undefined;


  return exports;

}));
