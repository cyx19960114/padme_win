/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.HarborApi) {
      root.HarborApi = {};
    }
    root.HarborApi.SearchRepository = factory(root.HarborApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The SearchRepository model module.
   * @module model/SearchRepository
   * @version 2.0
   */

  /**
   * Constructs a new <code>SearchRepository</code>.
   * @alias module:model/SearchRepository
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>SearchRepository</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SearchRepository} obj Optional instance to populate.
   * @return {module:model/SearchRepository} The populated <code>SearchRepository</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('project_id'))
        obj.projectId = ApiClient.convertToType(data['project_id'], 'Number');
      if (data.hasOwnProperty('project_name'))
        obj.projectName = ApiClient.convertToType(data['project_name'], 'String');
      if (data.hasOwnProperty('project_public'))
        obj.projectPublic = ApiClient.convertToType(data['project_public'], 'Boolean');
      if (data.hasOwnProperty('repository_name'))
        obj.repositoryName = ApiClient.convertToType(data['repository_name'], 'String');
      if (data.hasOwnProperty('pull_count'))
        obj.pullCount = ApiClient.convertToType(data['pull_count'], 'Number');
      if (data.hasOwnProperty('artifact_count'))
        obj.artifactCount = ApiClient.convertToType(data['artifact_count'], 'Number');
    }
    return obj;
  }

  /**
   * The ID of the project that the repository belongs to
   * @member {Number} projectId
   */
  exports.prototype.projectId = undefined;

  /**
   * The name of the project that the repository belongs to
   * @member {String} projectName
   */
  exports.prototype.projectName = undefined;

  /**
   * The flag to indicate the publicity of the project that the repository belongs to (1 is public, 0 is not)
   * @member {Boolean} projectPublic
   */
  exports.prototype.projectPublic = undefined;

  /**
   * The name of the repository
   * @member {String} repositoryName
   */
  exports.prototype.repositoryName = undefined;

  /**
   * The count how many times the repository is pulled
   * @member {Number} pullCount
   */
  exports.prototype.pullCount = undefined;

  /**
   * The count of artifacts in the repository
   * @member {Number} artifactCount
   */
  exports.prototype.artifactCount = undefined;


  return exports;

}));
