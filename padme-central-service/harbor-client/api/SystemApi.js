/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CVEAllowlist', 'model/PingEndpoint'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/CVEAllowlist'), require('../model/PingEndpoint'));
  } else {
    // Browser globals (root is window)
    if (!root.HarborApi) {
      root.HarborApi = {};
    }
    root.HarborApi.SystemApi = factory(root.HarborApi.ApiClient, root.HarborApi.CVEAllowlist, root.HarborApi.PingEndpoint);
  }
}(this, function(ApiClient, CVEAllowlist, PingEndpoint) {
  'use strict';

  /**
   * System service.
   * @module api/SystemApi
   * @version 2.0
   */

  /**
   * Constructs a new SystemApi. 
   * @alias module:api/SystemApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the systemCVEAllowlistGet operation.
     * @callback module:api/SystemApi~systemCVEAllowlistGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CVEAllowlist} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the system level allowlist of CVE.
     * Get the system level allowlist of CVE.  This API can be called by all authenticated users.
     * @param {module:api/SystemApi~systemCVEAllowlistGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CVEAllowlist}
     */
    this.systemCVEAllowlistGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json', 'text/plain'];
      var returnType = CVEAllowlist;

      return this.apiClient.callApi(
        '/system/CVEAllowlist', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the systemCVEAllowlistPut operation.
     * @callback module:api/SystemApi~systemCVEAllowlistPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the system level allowlist of CVE.
     * This API overwrites the system level allowlist of CVE with the list in request body.  Only system Admin has permission to call this API.
     * @param {Object} opts Optional parameters
     * @param {module:model/CVEAllowlist} opts.allowlist The allowlist with new content
     * @param {module:api/SystemApi~systemCVEAllowlistPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.systemCVEAllowlistPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['allowlist'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json', 'text/plain'];
      var returnType = null;

      return this.apiClient.callApi(
        '/system/CVEAllowlist', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the systemOidcPingPost operation.
     * @callback module:api/SystemApi~systemOidcPingPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Test the OIDC endpoint.
     * Test the OIDC endpoint, the setting of the endpoint is provided in the request.  This API can only be called by system admin.
     * @param {module:model/PingEndpoint} endpoint Request body for OIDC endpoint to be tested.
     * @param {module:api/SystemApi~systemOidcPingPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.systemOidcPingPost = function(endpoint, callback) {
      var postBody = endpoint;

      // verify the required parameter 'endpoint' is set
      if (endpoint === undefined || endpoint === null) {
        throw new Error("Missing the required parameter 'endpoint' when calling systemOidcPingPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json', 'text/plain'];
      var returnType = null;

      return this.apiClient.callApi(
        '/system/oidc/ping', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
