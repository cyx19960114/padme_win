/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Errors', 'model/Schedule', 'model/Stats'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Errors'), require('../model/Schedule'), require('../model/Stats'));
  } else {
    // Browser globals (root is window)
    if (!root.HarborApi) {
      root.HarborApi = {};
    }
    root.HarborApi.ScanAllApi = factory(root.HarborApi.ApiClient, root.HarborApi.Errors, root.HarborApi.Schedule, root.HarborApi.Stats);
  }
}(this, function(ApiClient, Errors, Schedule, Stats) {
  'use strict';

  /**
   * ScanAll service.
   * @module api/ScanAllApi
   * @version 2.0
   */

  /**
   * Constructs a new ScanAllApi. 
   * @alias module:api/ScanAllApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createScanAllSchedule operation.
     * @callback module:api/ScanAllApi~createScanAllScheduleCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a schedule or a manual trigger for the scan all job.
     * This endpoint is for creating a schedule or a manual trigger for the scan all job, which scans all of images in Harbor.
     * @param {module:model/Schedule} schedule Create a schedule or a manual trigger for the scan all job.
     * @param {module:api/ScanAllApi~createScanAllScheduleCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.createScanAllSchedule = function(schedule, callback) {
      var postBody = schedule;

      // verify the required parameter 'schedule' is set
      if (schedule === undefined || schedule === null) {
        throw new Error("Missing the required parameter 'schedule' when calling createScanAllSchedule");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json', 'text/plain'];
      var returnType = null;

      return this.apiClient.callApi(
        '/system/scanAll/schedule', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getLatestScanAllMetrics operation.
     * @callback module:api/ScanAllApi~getLatestScanAllMetricsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Stats} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the metrics of the latest scan all process
     * Get the metrics of the latest scan all process
     * @param {module:api/ScanAllApi~getLatestScanAllMetricsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Stats}
     */
    this.getLatestScanAllMetrics = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json', 'text/plain'];
      var returnType = Stats;

      return this.apiClient.callApi(
        '/scans/all/metrics', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getLatestScheduledScanAllMetrics operation.
     * @callback module:api/ScanAllApi~getLatestScheduledScanAllMetricsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Stats} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the metrics of the latest scheduled scan all process
     * Get the metrics of the latest scheduled scan all process
     * @param {module:api/ScanAllApi~getLatestScheduledScanAllMetricsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Stats}
     */
    this.getLatestScheduledScanAllMetrics = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json', 'text/plain'];
      var returnType = Stats;

      return this.apiClient.callApi(
        '/scans/schedule/metrics', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getScanAllSchedule operation.
     * @callback module:api/ScanAllApi~getScanAllScheduleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Schedule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get scan all's schedule.
     * This endpoint is for getting a schedule for the scan all job, which scans all of images in Harbor.
     * @param {module:api/ScanAllApi~getScanAllScheduleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Schedule}
     */
    this.getScanAllSchedule = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json', 'text/plain'];
      var returnType = Schedule;

      return this.apiClient.callApi(
        '/system/scanAll/schedule', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateScanAllSchedule operation.
     * @callback module:api/ScanAllApi~updateScanAllScheduleCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update scan all's schedule.
     * This endpoint is for updating the schedule of scan all job, which scans all of images in Harbor.
     * @param {module:model/Schedule} schedule Updates the schedule of scan all job, which scans all of images in Harbor.
     * @param {module:api/ScanAllApi~updateScanAllScheduleCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.updateScanAllSchedule = function(schedule, callback) {
      var postBody = schedule;

      // verify the required parameter 'schedule' is set
      if (schedule === undefined || schedule === null) {
        throw new Error("Missing the required parameter 'schedule' when calling updateScanAllSchedule");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json', 'text/plain'];
      var returnType = null;

      return this.apiClient.callApi(
        '/system/scanAll/schedule', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
