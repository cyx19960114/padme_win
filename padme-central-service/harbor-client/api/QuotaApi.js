/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Quota', 'model/QuotaUpdateReq'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Quota'), require('../model/QuotaUpdateReq'));
  } else {
    // Browser globals (root is window)
    if (!root.HarborApi) {
      root.HarborApi = {};
    }
    root.HarborApi.QuotaApi = factory(root.HarborApi.ApiClient, root.HarborApi.Quota, root.HarborApi.QuotaUpdateReq);
  }
}(this, function(ApiClient, Quota, QuotaUpdateReq) {
  'use strict';

  /**
   * Quota service.
   * @module api/QuotaApi
   * @version 2.0
   */

  /**
   * Constructs a new QuotaApi. 
   * @alias module:api/QuotaApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the quotasIdGet operation.
     * @callback module:api/QuotaApi~quotasIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Quota} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the specified quota
     * Get the specified quota
     * @param {Number} id Quota ID
     * @param {module:api/QuotaApi~quotasIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Quota}
     */
    this.quotasIdGet = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling quotasIdGet");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json', 'text/plain'];
      var returnType = Quota;

      return this.apiClient.callApi(
        '/quotas/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the quotasIdPut operation.
     * @callback module:api/QuotaApi~quotasIdPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the specified quota
     * Update hard limits of the specified quota
     * @param {Number} id Quota ID
     * @param {module:model/QuotaUpdateReq} hard The new hard limits for the quota
     * @param {module:api/QuotaApi~quotasIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.quotasIdPut = function(id, hard, callback) {
      var postBody = hard;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling quotasIdPut");
      }

      // verify the required parameter 'hard' is set
      if (hard === undefined || hard === null) {
        throw new Error("Missing the required parameter 'hard' when calling quotasIdPut");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json', 'text/plain'];
      var returnType = null;

      return this.apiClient.callApi(
        '/quotas/{id}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
