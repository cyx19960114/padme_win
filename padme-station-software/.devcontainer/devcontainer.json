// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.217.4/containers/docker-existing-dockerfile
{
	"name": "Station Software",

	// Add the IDs of extensions you want installed when the container is created.
	"customizations": {
		"vscode": {
			"extensions": [
				"dbaeumer.vscode-eslint",
				"ms-vscode.vscode-js-profile-flame",
				"orta.vscode-jest",
				"mongodb.mongodb-vscode",
				"donjayamanne.githistory",
				"waderyan.gitblame"
			] 
		}
	},
	
	//Use the existing docker-compose file
	"dockerComposeFile": ["../StationDeploymentFiles/docker-compose-dev.yml"],
  	"service": "pht-web",
	"workspaceFolder": "/usr/src/app",

	//Add current username as project name to to the .env file
	//Otherwise, instances with the same parent directory would overwrite each other
	"initializeCommand": "echo COMPOSE_PROJECT_NAME=$USER > .env",

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	"postCreateCommand": "git config --global --add safe.directory /usr/src/app && apt update && apt install -y man"

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
