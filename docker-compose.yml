# cs_compose_version: 1.0
# PADME Central Service - 本地化部署版本

services:

  centralservice:
    image: padme-central-service:local
    build: ./padme-central-service
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - centernetwork
      - proxynet
      - vaultnet
    environment:
      # 主机配置 (本地化)
      VIRTUAL_HOST: "localhost:3000"
      LETSENCRYPT_HOST: "localhost:3000"
      HOST_ADDRESS: localhost
      HOST_PORT: 3000
      HOST_BASE: ""
      
      # 数据库配置
      DB_USERNAME: postgres
      DB_PASSWORD: central_postgres_password_2024
      DB_HOST: center_database
      
      # Harbor配置 (连接到本地Harbor)
      HARBOR_ADDRESS: host.docker.internal
      HARBOR_PORT: 8080
      HARBOR_ADMIN_USER: admin
      HARBOR_ADMIN_PASSWORD: Harbor12345
      HARBOR_ADMIN_CLI_SECRET: ""
      HARBOR_WEBHOOK_SECRET: harbor_webhook_secret_2024
      
      # Keycloak配置 (连接到本地Keycloak)
      AUTH_SERVER_ADDRESS: host.docker.internal
      REACT_APP_AUTH_SERVER_ADDRESS: http://localhost:8090
      AUTH_SERVER_PORT: 8090
      AUTH_SERVER_ADMIN_CLI_USERNAME: admin
      AUTH_SERVER_ADMIN_CLI_PASSWORD: admin_password_2024
      KEYCLOAK_CLIENT_SECRET: "VHdbyDpLxGVNwcSxU1PBSDUJDPiCxzjZ"
      
      # 注册表配置 (本地化配置)
      STATION_REGISTRY_ADDRESS: localhost
      STATION_REGISTRY_PORT: 3000
      STATION_REGISTRY_JWT_SECRET: station_registry_jwt_secret_2024
      STATION_REGISTRY_API_ADDRESS: http://localhost:3000/api
      
      # Vault配置 (连接到本地Vault)
      VAULT_HOST: localhost
      VAULT_PORT: 8215
      VAULT_ROLE_ID: ""
      VAULT_SECRET_ID: ""
      
      # Slack配置 (禁用)
      SLACK_BOT_TOKEN: ""
      SLACK_SIGNING_SECRET: ""
      SLACK_PADME_CHANNEL_ID: ""
      SLACK_INTEGRATION_ENABLED: "false"
      
      # MinIO配置 (内置MinIO)
      MINIO_PORT: 9000
      MINIO_ENDPOINT: minio
      MINIO_USE_SSL: "false"
      MINIO_ADMIN_USER: centralservice
      MINIO_ADMIN_PASSWORD: minio_password_2024
      
      # 缓存配置
      STATION_LIST_CACHE_TTL: 300
      
      # React前端配置
      REACT_APP_CS_API_ENDPOINT: "http://localhost:3000"
      REACT_APP_CS_PORTAL_ENDPOINT: "http://localhost:3000"
      REACT_APP_KEYCLOAK_REALM: "pht"
      REACT_APP_KEYCLOAK_CLIENT_ID: "central-service"
      
      # DinD配置 (禁用TLS)
      DOCKER_HOST: "tcp://dind:2375"
      DOCKER_TLS_VERIFY: ""
      DOCKER_CERT_PATH: ""
      
      # Vault配置 (禁用TLS for local)
      VAULT_TLS_VERIFY: ""
      
      # 邮件配置 (本地开发禁用)
      MAIL_HOST: ""
      MAIL_PORT: 25
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_USESMTPS: "false"
      MAIL_VERIFYSMTPS: "false"
      MAIL_FROMADDRESS: "noreply@localhost"
      MAIL_REPLYTOADDRESS: "support@localhost"
      
      # 元数据存储配置
      STORE_ENROLLMENT_SECRET: metadata_store_secret_2024
      METADATA_STORE_URL: "http://localhost:3000/metadata/stations/enroll"
      METADATA_STATION_IRI_PREFIX: "http://localhost:3000/entities/stations/"
      MONITORING_API_ADDRESS: "http://localhost:3000/monitoring"
      
      # Node.js配置
      NODE_ENV: production
    # volumes:
      # - "./vault-certs:/usr/src/app/vault-certs-client/certs:ro"  # 本地开发不需要Vault证书
    depends_on:
      - postgres_center
      - minio
      - dind

  dind:
    image: dind-dind:latest
    environment:
      # Docker daemon配置 (使用我们之前部署的DinD配置)
      DOCKER_TLS_CERTDIR: ""
      DOCKER_HOST: tcp://0.0.0.0:2375
      DOCKER_TLS_VERIFY: ""
    volumes:
      - "dind-certs-ca:/certs/ca"
      - "dind-certs-client:/certs/client"
      - "dind-data:/var/lib/docker"
    networks:
      centernetwork:
        aliases:
          - dind
    privileged: true
    restart: unless-stopped

  minio:
    image: 'minio/minio:latest'
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - "MINIO_ROOT_USER=centralservice"
      - "MINIO_ROOT_PASSWORD=minio_password_2024"
      - "MINIO_BROWSER=off"
    volumes:
      - "minio_data:/data"
    networks:
      centernetwork:
        aliases:
          - minio
    command: server /data --console-address ":9001"

  postgres_center:
    image: postgres:13
    restart: unless-stopped
    ports:
      - "5434:5432"
    networks:
      centernetwork:
        aliases:
          - center_database
    environment:
      POSTGRES_PASSWORD: central_postgres_password_2024
      POSTGRES_DB: postgres
    volumes:
      - "postgres_center_data:/var/lib/postgresql/data"

networks:
  proxynet:
    external: true
  vaultnet:
    external: true
  centernetwork:

volumes:
  postgres_center_data:
  dind-certs-ca:
  dind-certs-client:
  dind-data:
  minio_data:
